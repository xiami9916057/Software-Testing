        -:    0:Source:../hw2-2-C1/nextdate.cc
        -:    0:Graph:nextdate.gcno
        -:    0:Data:nextdate.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:
        -:    2:#include "nextdate.h"
        -:    3:
        -:    4:#include <sstream>
        -:    5:
        -:    6:
        -:    7:
function _Z10IsLeapYeari called 10 returned 100% blocks executed 100%
       10:    8:bool IsLeapYear(int year){
       10:    9:  if(( (year%4)==0 && (year%100)!=0 )|| ((year%400) ==0)){
branch  0 taken 60% (fallthrough)
branch  1 taken 40%
branch  2 taken 33% (fallthrough)
branch  3 taken 67%
branch  4 taken 33% (fallthrough)
branch  5 taken 67%
        6:   10:    return true;
        -:   11:  } else {
        4:   12:    return false;
        -:   13:  } 	
        -:   14:	
        -:   15:}
        -:   16:
        -:   17:
        -:   18:
function _Z8NextDateiii called 146 returned 100% blocks executed 68%
      146:   19:string NextDate(int month,int day,int year){
        -:   20:
      146:   21:	int tomorrowDay=day,tomorrowMonth=month,tomorrowYear=year;
        -:   22:
      584:   23:	string err[3] = {"Month is out of range.","Day is out of range.","Year is out of range."};
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
call   10 returned 100%
call   11 returned 100%
branch 12 taken 100% (fallthrough)
branch 13 taken 0% (throw)
call   14 returned 100%
call   15 returned 100%
branch 16 taken 100% (fallthrough)
branch 17 taken 0% (throw)
call   18 never executed
call   19 never executed
call   20 never executed
branch 21 never executed
branch 22 never executed
branch 23 never executed
branch 24 never executed
call   25 never executed
call   26 never executed
call   27 never executed
      292:   24:	string err_invalid("Invalid");
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100% (fallthrough)
branch  7 taken 0% (throw)
call    8 never executed
call    9 never executed
      292:   25:	string err_msg("");
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100% (fallthrough)
branch  7 taken 0% (throw)
call    8 never executed
        -:   26:	
        -:   27:	
      146:   28:	bool IsInvalid = false;
        -:   29:	
      146:   30:	bool c1= ((month>=1) && (month<=12));
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
branch  2 taken 99% (fallthrough)
branch  3 taken 1%
      146:   31:	bool c2= ((day>=1) && (day<=31));
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
branch  2 taken 99% (fallthrough)
branch  3 taken 1%
      146:   32:	bool c3= ((year>=1812) && (year<=2012));
branch  0 taken 93% (fallthrough)
branch  1 taken 7%
branch  2 taken 99% (fallthrough)
branch  3 taken 1%
      146:   33:	bool cond[3] = {c1,c2,c3};
        -:   34:	
      584:   35:	for (int i=0 ; i<3 ; i++){
branch  0 taken 75%
branch  1 taken 25% (fallthrough)
      438:   36:		if(!cond[i]){
branch  0 taken 8% (fallthrough)
branch  1 taken 92%
       36:   37:			IsInvalid = true;
       36:   38:			err_msg = err_msg + err[i];
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 never executed
call   10 never executed
        -:   39:		}
        -:   40:	}
      146:   41:	if (IsInvalid) return err_msg;
branch  0 taken 18% (fallthrough)
branch  1 taken 82%
call    2 returned 100%
branch  3 taken 100% (fallthrough)
branch  4 taken 0% (throw)
        -:   42:	
      120:   43:	switch(month){
branch  0 taken 44%
branch  1 taken 28%
branch  2 taken 2%
branch  3 taken 27%
branch  4 taken 0%
        -:   44:		case 1:
        -:   45:		case 3:
        -:   46:		case 5:
        -:   47:		case 7:
        -:   48:		case 8:
        -:   49:		case 10:
       53:   50:			if(day < 31){
branch  0 taken 77% (fallthrough)
branch  1 taken 23%
       41:   51:				tomorrowDay = day + 1;
        -:   52:			}else{
       12:   53:				tomorrowDay = 1;
       12:   54:				tomorrowMonth = month + 1;
        -:   55:			}
       53:   56:			break;
        -:   57:		case 4:
        -:   58:		case 6:
        -:   59:		case 9:
        -:   60:		case 11:
       33:   61:			if(day < 30){
branch  0 taken 52% (fallthrough)
branch  1 taken 48%
       17:   62:				tomorrowDay = day + 1;
       16:   63:			}else if(day == 30){
branch  0 taken 44% (fallthrough)
branch  1 taken 56%
        7:   64:				tomorrowDay = 1;
        7:   65:				tomorrowMonth = month + 1;				
        -:   66:			}else{
        9:   67:				return err_invalid;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:   68:			}
       24:   69:			break;
        -:   70:		case 12:
        2:   71:			if(day < 31){
branch  0 taken 50% (fallthrough)
branch  1 taken 50%
        1:   72:				tomorrowDay = day + 1;
        -:   73:			}else{
        1:   74:				tomorrowDay = 1;
        1:   75:				tomorrowMonth = 1;
        1:   76:				if(year == 2012){
branch  0 taken 0% (fallthrough)
branch  1 taken 100%
    #####:   77:					return err[2];
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   78:				}else{
        1:   79:					tomorrowYear = year + 1;
        -:   80:				}
        -:   81:			}
        2:   82:			break;
        -:   83:		case 2:
       32:   84:			if(day < 28){
branch  0 taken 22% (fallthrough)
branch  1 taken 78%
        7:   85:				tomorrowDay = day + 1;
       25:   86:			}else if(day == 28){
branch  0 taken 8% (fallthrough)
branch  1 taken 92%
        2:   87:				if(IsLeapYear(year)){
call    0 returned 100%
branch  1 taken 50% (fallthrough)
branch  2 taken 50%
        1:   88:					tomorrowDay = 29;
        -:   89:				}else{
        1:   90:					tomorrowDay = 1;
        1:   91:					tomorrowMonth = 3;					
        -:   92:				}
       23:   93:			}else if(day == 29){
branch  0 taken 35% (fallthrough)
branch  1 taken 65%
        8:   94:				if(IsLeapYear(year)){
call    0 returned 100%
branch  1 taken 63% (fallthrough)
branch  2 taken 38%
        5:   95:					tomorrowDay = 1;
        5:   96:					tomorrowMonth = 3;					
        -:   97:				}else{
        3:   98:					return err_invalid;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:   99:				}				
        -:  100:			}else{
       15:  101:				return err_invalid;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:  102:			}
       14:  103:			break;
        -:  104:		default:
    #####:  105:			break;
        -:  106:	}
        -:  107:
        -:  108:	
      186:  109:	stringstream mm,dd,yy;
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100% (fallthrough)
branch  7 taken 0% (throw)
call    8 returned 100%
call    9 returned 100%
branch 10 taken 100% (fallthrough)
branch 11 taken 0% (throw)
call   12 returned 100%
branch 13 taken 100% (fallthrough)
branch 14 taken 0% (throw)
call   15 returned 100%
branch 16 taken 100% (fallthrough)
branch 17 taken 0% (throw)
call   18 never executed
call   19 never executed
      186:  110:	string m,d,y;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 100% (fallthrough)
branch 11 taken 0% (throw)
call   12 returned 100%
branch 13 taken 100% (fallthrough)
branch 14 taken 0% (throw)
call   15 returned 100%
branch 16 taken 100% (fallthrough)
branch 17 taken 0% (throw)
call   18 never executed
call   19 never executed
call   20 never executed
        -:  111:	
       93:  112:	mm<<tomorrowMonth;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       93:  113:	dd<<tomorrowDay;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       93:  114:	yy<<tomorrowYear;	
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:  115:	
       93:  116:	mm>>m;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       93:  117:	dd>>d;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       93:  118:	yy>>y;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:  119:	
      186:  120:	string dot(".");
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100% (fallthrough)
branch  7 taken 0% (throw)
call    8 never executed
call    9 never executed
      186:  121:	string tomorrowDate("");
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
branch  6 taken 100% (fallthrough)
branch  7 taken 0% (throw)
call    8 never executed
       93:  122:	tomorrowDate = y+dot+m+dot+d;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
branch  7 taken 100% (fallthrough)
branch  8 taken 0% (throw)
call    9 returned 100%
branch 10 taken 100% (fallthrough)
branch 11 taken 0% (throw)
call   12 returned 100%
branch 13 taken 100% (fallthrough)
branch 14 taken 0% (throw)
call   15 returned 100%
branch 16 taken 100% (fallthrough)
branch 17 taken 0% (throw)
call   18 returned 100%
branch 19 taken 100% (fallthrough)
branch 20 taken 0% (throw)
call   21 returned 100%
branch 22 taken 100% (fallthrough)
branch 23 taken 0% (throw)
call   24 returned 100%
branch 25 taken 100% (fallthrough)
branch 26 taken 0% (throw)
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
        -:  123:	
      770:  124:	return tomorrowDate;
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
branch  6 taken 75% (fallthrough)
branch  7 taken 25%
call    8 never executed
branch  9 never executed
branch 10 never executed
        -:  125:	
        -:  126:}
        -:  127:
        -:  128:
        -:  129:
